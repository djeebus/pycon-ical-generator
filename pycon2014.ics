BEGIN:VCALENDAR
PRODID:-//djeebus/pycon2014//NONSGML v1.0//EN
VERSION:2.0
CALSCALE:GREGORIAN
X-WR-CALNAME:Pycon 2014 Schedule
X-WR-TIMEZONE:Eastern Standard Time
BEGIN:VTIMEZONE
TZID:Eastern Standard Time
BEGIN:STANDARD
DTSTART:16011104T020000
RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=11
TZOFFSETFROM:-0400
TZOFFSETTO:-0500
END:STANDARD
BEGIN:DAYLIGHT
DTSTART:16010311T020000
RRULE:FREQ=YEARLY;BYDAY=2SU;BYMONTH=3
TZOFFSETFROM:-0500
TZOFFSETTO:-0400
END:DAYLIGHT
END:VTIMEZONE
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T105000
DTEND;TZID="Eastern Standard Time":20140411T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.211
CREATED:20140331T221923
DESCRIPTION:Why are Python programmers crazy about lists and dictionaries\, when other languages tout bitmaps\, linked lists\, and B+ trees? Are we missing out? Come learn how data structures are implemented on bare metal\, how to select the right data structure\, how the list and dictionary cover a wide swath of use cases\, and when to dip into the Standard Library or a third-party package for an alternative.

https://us.pycon.org/2014/schedule/presentation/211/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Why are Python programmers crazy about lists and dictionaries\, when other languages tout bitmaps\, linked lists\, and B+ trees? Are we missing out? Come learn how data structures are implemented on bare metal\, how to select the right data structure\, how the list and dictionary cover a wide swath of use cases\, and when to dip into the Standard Library or a third-party package for an alternative.<br><a href='https://us.pycon.org/2014/schedule/presentation/211/'>https://us.pycon.org/2014/schedule/presentation/211/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/211/
SUMMARY:All Your Ducks In A Row: Data Structures in the Standard Library and Beyond
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T105000
DTEND;TZID="Eastern Standard Time":20140411T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.145
CREATED:20140331T221923
DESCRIPTION:When people talk about Big O notation do you go cross eyed? Do you not get the point of learning about implementing linked lists or depth first search? Join me as I introduce the CS fundamentals that helped me ace my Google interview\, even though I didn't get a formal CS education.

https://us.pycon.org/2014/schedule/presentation/145/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>When people talk about Big O notation do you go cross eyed? Do you not get the point of learning about implementing linked lists or depth first search? Join me as I introduce the CS fundamentals that helped me ace my Google interview\, even though I didn't get a formal CS education.<br><a href='https://us.pycon.org/2014/schedule/presentation/145/'>https://us.pycon.org/2014/schedule/presentation/145/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/145/
SUMMARY:Computer science fundamentals for self-taught programmers
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T105000
DTEND;TZID="Eastern Standard Time":20140411T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.175
CREATED:20140331T221923
DESCRIPTION:You've deployed! But your friends can't see it - what's wrong? I'm betting DNS.  Maybe you've fixed a couple of entries\, point some records to hostnames\, waited patiently for new domains to resolve only to notice your nameservers are incorrect.  But what actually goes on with DNS? Come to this talk to find out how DNS works\, and how to interact and create a DNS with Python.

https://us.pycon.org/2014/schedule/presentation/175/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>You've deployed! But your friends can't see it - what's wrong? I'm betting DNS.  Maybe you've fixed a couple of entries\, point some records to hostnames\, waited patiently for new domains to resolve only to notice your nameservers are incorrect.  But what actually goes on with DNS? Come to this talk to find out how DNS works\, and how to interact and create a DNS with Python.<br><a href='https://us.pycon.org/2014/schedule/presentation/175/'>https://us.pycon.org/2014/schedule/presentation/175/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/175/
SUMMARY:For Lack of a Better Name(server): DNS Explained.
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T105000
DTEND;TZID="Eastern Standard Time":20140411T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.180
CREATED:20140331T221923
DESCRIPTION:Many developers\, including quite a few experienced developers\, are absolutely confounded by regular expressions. However\, regular expressions aren't as difficult as many believe. In this talk\, I will teach regular expressions by starting with the simple and moving toward the complex\, so that you too can read and write regular expressions like a hero.

https://us.pycon.org/2014/schedule/presentation/180/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Many developers\, including quite a few experienced developers\, are absolutely confounded by regular expressions. However\, regular expressions aren't as difficult as many believe. In this talk\, I will teach regular expressions by starting with the simple and moving toward the complex\, so that you too can read and write regular expressions like a hero.<br><a href='https://us.pycon.org/2014/schedule/presentation/180/'>https://us.pycon.org/2014/schedule/presentation/180/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/180/
SUMMARY:Introduction to Regular Expressions
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T105000
DTEND;TZID="Eastern Standard Time":20140411T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.168
CREATED:20140331T221923
DESCRIPTION:Every developer will inevitably feel the pain of character encoding issues. We will cover the fundamentals every Python developer should know on character encoding and Unicode. We will teach you how to identify the types of problems that occur when dealing with character encoding and outline a set of best practices and useful libraries which can be used to avoid and fix character encoding issues.

https://us.pycon.org/2014/schedule/presentation/168/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Every developer will inevitably feel the pain of character encoding issues. We will cover the fundamentals every Python developer should know on character encoding and Unicode. We will teach you how to identify the types of problems that occur when dealing with character encoding and outline a set of best practices and useful libraries which can be used to avoid and fix character encoding issues.<br><a href='https://us.pycon.org/2014/schedule/presentation/168/'>https://us.pycon.org/2014/schedule/presentation/168/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/168/
SUMMARY:Character encoding and Unicode in Python: How to (╯°□°）╯︵ ┻━┻ with dignity
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T113000
DTEND;TZID="Eastern Standard Time":20140411T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.184
CREATED:20140331T221923
DESCRIPTION:This is a talk about building full-stack python web applications where you manage every part of the application yourself. I will walk through how to setup a production server with your web application code\, a local development environment using vagrant\, and how to deploy from your local environment to production. I will also walk through python and Django libraries that will make your life easier.

https://us.pycon.org/2014/schedule/presentation/184/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This is a talk about building full-stack python web applications where you manage every part of the application yourself. I will walk through how to setup a production server with your web application code\, a local development environment using vagrant\, and how to deploy from your local environment to production. I will also walk through python and Django libraries that will make your life easier.<br><a href='https://us.pycon.org/2014/schedule/presentation/184/'>https://us.pycon.org/2014/schedule/presentation/184/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/184/
SUMMARY:So you want to be a full-stack developer? How to build a full-stack python web application.
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T113000
DTEND;TZID="Eastern Standard Time":20140411T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.156
CREATED:20140331T221923
DESCRIPTION:Did you know that when you resolve a hostname\, you can get multiple addresses back\, and pick any one to connect to? Some of these addresses will connect near instantly\, while others might take a long time or time out. This talk is about a Twisted endpoint API I built that takes a hostname\, and returns the connection that takes the least time to complete\, from the list of resolved host addresses.

https://us.pycon.org/2014/schedule/presentation/156/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Did you know that when you resolve a hostname\, you can get multiple addresses back\, and pick any one to connect to? Some of these addresses will connect near instantly\, while others might take a long time or time out. This talk is about a Twisted endpoint API I built that takes a hostname\, and returns the connection that takes the least time to complete\, from the list of resolved host addresses.<br><a href='https://us.pycon.org/2014/schedule/presentation/156/'>https://us.pycon.org/2014/schedule/presentation/156/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/156/
SUMMARY:Kneel And Disconnect: Getting The Fastest Connection Out Of A Hostname
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T113000
DTEND;TZID="Eastern Standard Time":20140411T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.147
CREATED:20140331T221923
DESCRIPTION:Building importers that consume other peoples' data can sometimes feel a bit like dumpster-diving. Non-compliant formats\, network errors and missing data are just some of the many ways your importer is a ticking time bomb. This talk presents ways to diffuse that bomb\, so when the data's broke\, you can still be the hero.

https://us.pycon.org/2014/schedule/presentation/147/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Building importers that consume other peoples' data can sometimes feel a bit like dumpster-diving. Non-compliant formats\, network errors and missing data are just some of the many ways your importer is a ticking time bomb. This talk presents ways to diffuse that bomb\, so when the data's broke\, you can still be the hero.<br><a href='https://us.pycon.org/2014/schedule/presentation/147/'>https://us.pycon.org/2014/schedule/presentation/147/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/147/
SUMMARY:Creating Bomb-Proof Data Importers
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T113000
DTEND;TZID="Eastern Standard Time":20140411T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.173
CREATED:20140331T221923
DESCRIPTION:Memcached is a popular\, blazing fast in-RAM key/object store mainly used in web applications (although it can be used in virtually any software). You will walk out of this talk with a solid understanding of memcached and what it does under the hood\, and become familiar with several patterns and best practices for making the most of it in your own Python applications.

https://us.pycon.org/2014/schedule/presentation/173/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Memcached is a popular\, blazing fast in-RAM key/object store mainly used in web applications (although it can be used in virtually any software). You will walk out of this talk with a solid understanding of memcached and what it does under the hood\, and become familiar with several patterns and best practices for making the most of it in your own Python applications.<br><a href='https://us.pycon.org/2014/schedule/presentation/173/'>https://us.pycon.org/2014/schedule/presentation/173/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/173/
SUMMARY:Cache me if you can: memcached, caching patterns and best practices
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T113000
DTEND;TZID="Eastern Standard Time":20140411T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.185
CREATED:20140331T221923
DESCRIPTION:Decorators are an invaluable addition to anyone's arsenal of python tools and tricks.  We will learn what a decorator is\, how decorators are created\, and then explore some of the cooler applications for decorators in our everyday projects.

https://us.pycon.org/2014/schedule/presentation/185/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Decorators are an invaluable addition to anyone's arsenal of python tools and tricks.  We will learn what a decorator is\, how decorators are created\, and then explore some of the cooler applications for decorators in our everyday projects.<br><a href='https://us.pycon.org/2014/schedule/presentation/185/'>https://us.pycon.org/2014/schedule/presentation/185/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/185/
SUMMARY:Decorators:  A Powerful Weapon in your Python Arsenal
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T121000
DTEND;TZID="Eastern Standard Time":20140411T124000
DTSTAMP:20140331T221923
UID:pycon-2014-2.178
CREATED:20140331T221923
DESCRIPTION:Ever wondered how python web-scraping libraries compare in terms of speed and accuracy? I’ll review lxml\, html5lib\, BeautifulSoup and scrapy with a series of sites evaluating how quickly they can parse pages and how accurately they can find data\, particularly pieces of data that render after DOM loading and other pesky bits like hidden form data\, internationalized data and mobile-compliant sites.

https://us.pycon.org/2014/schedule/presentation/178/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Ever wondered how python web-scraping libraries compare in terms of speed and accuracy? I’ll review lxml\, html5lib\, BeautifulSoup and scrapy with a series of sites evaluating how quickly they can parse pages and how accurately they can find data\, particularly pieces of data that render after DOM loading and other pesky bits like hidden form data\, internationalized data and mobile-compliant sites.<br><a href='https://us.pycon.org/2014/schedule/presentation/178/'>https://us.pycon.org/2014/schedule/presentation/178/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/178/
SUMMARY:Python Scraping Showdown: A performance and accuracy review of top scraping libraries
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T121000
DTEND;TZID="Eastern Standard Time":20140411T124000
DTSTAMP:20140331T221923
UID:pycon-2014-2.229
CREATED:20140331T221923
DESCRIPTION:Suppose `import` didn't exist\, and we had to invent it from scratch.  We'll look at the problem - code sharing and reuse across modules - and different ways we could solve it.  We'll come up with `import` from parallel universes and then reinvent python's actual implementation.  Finally\, we'll import - using python's design - without using the `import` keyword.

https://us.pycon.org/2014/schedule/presentation/229/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Suppose `import` didn't exist\, and we had to invent it from scratch.  We'll look at the problem - code sharing and reuse across modules - and different ways we could solve it.  We'll come up with `import` from parallel universes and then reinvent python's actual implementation.  Finally\, we'll import - using python's design - without using the `import` keyword.<br><a href='https://us.pycon.org/2014/schedule/presentation/229/'>https://us.pycon.org/2014/schedule/presentation/229/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/229/
SUMMARY:Import-ant Decisions
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T121000
DTEND;TZID="Eastern Standard Time":20140411T125500
DTSTAMP:20140331T221923
UID:pycon-2014-2.157
CREATED:20140331T221923
DESCRIPTION:This talk is an experience report / best practices summary\, based on work porting a very large stack to Python 3.x.   The stack includes the Zope3 component architecture\, ZODB\, WebOb\, pyramid\, other dependencies\, totalling ~180 KLOC Python + ~25 KLOC C.

https://us.pycon.org/2014/schedule/presentation/157/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk is an experience report / best practices summary\, based on work porting a very large stack to Python 3.x.   The stack includes the Zope3 component architecture\, ZODB\, WebOb\, pyramid\, other dependencies\, totalling ~180 KLOC Python + ~25 KLOC C.<br><a href='https://us.pycon.org/2014/schedule/presentation/157/'>https://us.pycon.org/2014/schedule/presentation/157/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/157/
SUMMARY:By Your Bootstraps:  Porting Your Application to Python3
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T121000
DTEND;TZID="Eastern Standard Time":20140411T125500
DTSTAMP:20140331T221923
UID:pycon-2014-2.176
CREATED:20140331T221923
DESCRIPTION:Learn how to let other people connect straight to your computer\, so your Python web apps\, email services\, or anything else can be seen by the world. It starts simple\, then explains when and how to use SimpleHTTPServer\, ssh tunnels\, Pagekite\, and IPv6. You can use these tools for temporary connections\, like sharing an in-progress demo\, or for permanent connectivity for your home server.

https://us.pycon.org/2014/schedule/presentation/176/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Learn how to let other people connect straight to your computer\, so your Python web apps\, email services\, or anything else can be seen by the world. It starts simple\, then explains when and how to use SimpleHTTPServer\, ssh tunnels\, Pagekite\, and IPv6. You can use these tools for temporary connections\, like sharing an in-progress demo\, or for permanent connectivity for your home server.<br><a href='https://us.pycon.org/2014/schedule/presentation/176/'>https://us.pycon.org/2014/schedule/presentation/176/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/176/
SUMMARY:Turn Your Computer Into a Server
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T121000
DTEND;TZID="Eastern Standard Time":20140411T125500
DTSTAMP:20140331T221923
UID:pycon-2014-2.155
CREATED:20140331T221923
DESCRIPTION:You may have encountered the pickle or cPickle libraries\, and used them to persist some state about your program. But how do they work? This talk explores how the pickle protocol works\, what its advantages are\, and its disadvantages

https://us.pycon.org/2014/schedule/presentation/155/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>You may have encountered the pickle or cPickle libraries\, and used them to persist some state about your program. But how do they work? This talk explores how the pickle protocol works\, what its advantages are\, and its disadvantages<br><a href='https://us.pycon.org/2014/schedule/presentation/155/'>https://us.pycon.org/2014/schedule/presentation/155/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/155/
SUMMARY:Pickles are for Delis, not Software
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T134000
DTEND;TZID="Eastern Standard Time":20140411T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.170
CREATED:20140331T221923
DESCRIPTION:Since PyCon 2013\, interest in the Young Coders class has intensified. Several Python conferences have run their own\, and classes outside of conferences - from one-time workshops to after school clubs - have sprung up as well.  With more people than ever interested in teaching Python to kids\, we're here to address how to organize a class. It takes some effort to set up\, but the payoff is enormous.

https://us.pycon.org/2014/schedule/presentation/170/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Since PyCon 2013\, interest in the Young Coders class has intensified. Several Python conferences have run their own\, and classes outside of conferences - from one-time workshops to after school clubs - have sprung up as well.  With more people than ever interested in teaching Python to kids\, we're here to address how to organize a class. It takes some effort to set up\, but the payoff is enormous.<br><a href='https://us.pycon.org/2014/schedule/presentation/170/'>https://us.pycon.org/2014/schedule/presentation/170/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/170/
SUMMARY:The Young Coder: Let's Learn Python (or, 'So, You Want to Run a Young Coders Class')
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T134000
DTEND;TZID="Eastern Standard Time":20140411T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.152
CREATED:20140331T221923
DESCRIPTION:Learn about Ansible -- a radically simple way to deploy applications\, configure operating systems\, and orchestrate IT operations including zero downtime rolling updates.   Let's bring about SkyNet faster.

https://us.pycon.org/2014/schedule/presentation/152/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Learn about Ansible -- a radically simple way to deploy applications\, configure operating systems\, and orchestrate IT operations including zero downtime rolling updates.   Let's bring about SkyNet faster.<br><a href='https://us.pycon.org/2014/schedule/presentation/152/'>https://us.pycon.org/2014/schedule/presentation/152/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/152/
SUMMARY:Ansible - Python-Powered Radically Simple IT Automation
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T135500
DTEND;TZID="Eastern Standard Time":20140411T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.186
CREATED:20140331T221923
DESCRIPTION:This talk traces JavaScript's impact on software development tools over forty years\, from 1995 until 2035. Although the language is mostly dead today\, it drove the largest transformation of mainstream development tools since the creation of Unix 65 years ago.

https://us.pycon.org/2014/schedule/presentation/186/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk traces JavaScript's impact on software development tools over forty years\, from 1995 until 2035. Although the language is mostly dead today\, it drove the largest transformation of mainstream development tools since the creation of Unix 65 years ago.<br><a href='https://us.pycon.org/2014/schedule/presentation/186/'>https://us.pycon.org/2014/schedule/presentation/186/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/186/
SUMMARY:The Birth & Death of JavaScript
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T135500
DTEND;TZID="Eastern Standard Time":20140411T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.189
CREATED:20140331T221923
DESCRIPTION:Twisted is an event-driven\, networking library.  This talk aims to explain what that means and give an overview of some of the main Twisted concepts.  It will also describe some of the functionality that Twisted offers out of the box.

https://us.pycon.org/2014/schedule/presentation/189/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Twisted is an event-driven\, networking library.  This talk aims to explain what that means and give an overview of some of the main Twisted concepts.  It will also describe some of the functionality that Twisted offers out of the box.<br><a href='https://us.pycon.org/2014/schedule/presentation/189/'>https://us.pycon.org/2014/schedule/presentation/189/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/189/
SUMMARY:An Introduction to Twisted
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T135500
DTEND;TZID="Eastern Standard Time":20140411T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.163
CREATED:20140331T221923
DESCRIPTION:It's inevitable that online communities will change\, and that we'll remember the community with a fondness that likely doesn't accurately reflect the former reality. We'll explore how we can take a set of articles from an online community and winnow out the stuff we feel is unworthy. We'll explore some of the machine learning tools that are just a 'pip install' away\, such as scikit-learn and nltk.

https://us.pycon.org/2014/schedule/presentation/163/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>It's inevitable that online communities will change\, and that we'll remember the community with a fondness that likely doesn't accurately reflect the former reality. We'll explore how we can take a set of articles from an online community and winnow out the stuff we feel is unworthy. We'll explore some of the machine learning tools that are just a 'pip install' away\, such as scikit-learn and nltk.<br><a href='https://us.pycon.org/2014/schedule/presentation/163/'>https://us.pycon.org/2014/schedule/presentation/163/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/163/
SUMMARY:Enough Machine Learning to Make Hacker News Readable Again
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T143500
DTEND;TZID="Eastern Standard Time":20140411T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.154
CREATED:20140331T221923
DESCRIPTION:Provide an introduction to machine learning to clarify what it is\, what it's not and how it fits into this picture of all the hot topics around data analytics and big data.

https://us.pycon.org/2014/schedule/presentation/154/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Provide an introduction to machine learning to clarify what it is\, what it's not and how it fits into this picture of all the hot topics around data analytics and big data.<br><a href='https://us.pycon.org/2014/schedule/presentation/154/'>https://us.pycon.org/2014/schedule/presentation/154/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/154/
SUMMARY:How to Get Started with Machine Learning
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T143500
DTEND;TZID="Eastern Standard Time":20140411T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.143
CREATED:20140331T221923
DESCRIPTION:There's a gaping hole in Python advocacy: K-12 educators. These are the front-lines of CS education\, especially in countries where attending primary and secondary school is compulsory\, and resources to teach CS are stretched very thin. Learn what we have to offer CS teachers and how you can help in your local area.

https://us.pycon.org/2014/schedule/presentation/143/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>There's a gaping hole in Python advocacy: K-12 educators. These are the front-lines of CS education\, especially in countries where attending primary and secondary school is compulsory\, and resources to teach CS are stretched very thin. Learn what we have to offer CS teachers and how you can help in your local area.<br><a href='https://us.pycon.org/2014/schedule/presentation/143/'>https://us.pycon.org/2014/schedule/presentation/143/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/143/
SUMMARY:The Python Pipeline: Why you should reach out to local teachers and how to do it
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T143500
DTEND;TZID="Eastern Standard Time":20140411T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.171
CREATED:20140331T221923
DESCRIPTION:AngularJS is a really exciting tool for building super slick single-page apps. But if you want them to play nice with a Python backend (Django\, Pyramid\, Flask\, etc.) you're going to have to do a little bit of wrangling. These are the design patterns that worked for us.

https://us.pycon.org/2014/schedule/presentation/171/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>AngularJS is a really exciting tool for building super slick single-page apps. But if you want them to play nice with a Python backend (Django\, Pyramid\, Flask\, etc.) you're going to have to do a little bit of wrangling. These are the design patterns that worked for us.<br><a href='https://us.pycon.org/2014/schedule/presentation/171/'>https://us.pycon.org/2014/schedule/presentation/171/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/171/
SUMMARY:Straightening Out AngularJS with Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T143500
DTEND;TZID="Eastern Standard Time":20140411T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.217
CREATED:20140331T221923
DESCRIPTION:Puppet modules provide reusable operations ('ops') code in a manner analogous to Django apps.  This talk explores the Puppet ecosystem through the eyes of a typical Python developer\, and demonstrates how to use Puppet modules effectively to deploy and secure Python web applications.

https://us.pycon.org/2014/schedule/presentation/217/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Puppet modules provide reusable operations ('ops') code in a manner analogous to Django apps.  This talk explores the Puppet ecosystem through the eyes of a typical Python developer\, and demonstrates how to use Puppet modules effectively to deploy and secure Python web applications.<br><a href='https://us.pycon.org/2014/schedule/presentation/217/'>https://us.pycon.org/2014/schedule/presentation/217/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/217/
SUMMARY:Puppet Modules: Apps for Ops
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T143500
DTEND;TZID="Eastern Standard Time":20140411T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.138
CREATED:20140331T221923
DESCRIPTION:A talk about mixing Twisted\, an asynchronous IO framework for Python\, with other Python code: blocking code\, other asynchronous code...

https://us.pycon.org/2014/schedule/presentation/138/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>A talk about mixing Twisted\, an asynchronous IO framework for Python\, with other Python code: blocking code\, other asynchronous code...<br><a href='https://us.pycon.org/2014/schedule/presentation/138/'>https://us.pycon.org/2014/schedule/presentation/138/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/138/
SUMMARY:Twisted Mixing
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T151500
DTEND;TZID="Eastern Standard Time":20140411T154500
DTSTAMP:20140331T221923
UID:pycon-2014-2.277
CREATED:20140331T221923
DESCRIPTION:Dgplug summer training is a free online IRC based course which aims to teach FOSS ideas and programming in general using Python to new programmers/stduents. In this talk we share our experiences\, lesson learned\, hoping that people will be able to replicate this in other parts of the world.

https://us.pycon.org/2014/schedule/presentation/277/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Dgplug summer training is a free online IRC based course which aims to teach FOSS ideas and programming in general using Python to new programmers/stduents. In this talk we share our experiences\, lesson learned\, hoping that people will be able to replicate this in other parts of the world.<br><a href='https://us.pycon.org/2014/schedule/presentation/277/'>https://us.pycon.org/2014/schedule/presentation/277/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/277/
SUMMARY:Teaching Python: To Infinity and Beyond
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T151500
DTEND;TZID="Eastern Standard Time":20140411T154500
DTSTAMP:20140331T221923
UID:pycon-2014-2.215
CREATED:20140331T221923
DESCRIPTION:Salt is the new kid on the block in the configuration management space. Unlike the Ruby-based Chef and Puppet\, Salt is written in Python\, making it easy to debug and extend for Python developers.  This talk will introduce Salt as well as explore some of the things that make it unique.

https://us.pycon.org/2014/schedule/presentation/215/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Salt is the new kid on the block in the configuration management space. Unlike the Ruby-based Chef and Puppet\, Salt is written in Python\, making it easy to debug and extend for Python developers.  This talk will introduce Salt as well as explore some of the things that make it unique.<br><a href='https://us.pycon.org/2014/schedule/presentation/215/'>https://us.pycon.org/2014/schedule/presentation/215/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/215/
SUMMARY:Getting Started with SaltStack
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T151500
DTEND;TZID="Eastern Standard Time":20140411T160000
DTSTAMP:20140331T221923
UID:pycon-2014-2.284
CREATED:20140331T221923
DESCRIPTION:Python’s asynchronous frameworks\, like Tulip\, Tornado\, and Twisted\, are increasingly important for writing high-performance web applications. Even if you’re an experienced web programmer\, you may lack a rigorous understanding of how these frameworks work and when to use them. Let’s see how Tulip's event loop works\, and learn how to efficiently handle very large numbers of concurrent connections.

https://us.pycon.org/2014/schedule/presentation/284/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Python’s asynchronous frameworks\, like Tulip\, Tornado\, and Twisted\, are increasingly important for writing high-performance web applications. Even if you’re an experienced web programmer\, you may lack a rigorous understanding of how these frameworks work and when to use them. Let’s see how Tulip's event loop works\, and learn how to efficiently handle very large numbers of concurrent connections.<br><a href='https://us.pycon.org/2014/schedule/presentation/284/'>https://us.pycon.org/2014/schedule/presentation/284/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/284/
SUMMARY:What Is Async, How Does It Work, And When Should I Use It?
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T151500
DTEND;TZID="Eastern Standard Time":20140411T160000
DTSTAMP:20140331T221923
UID:pycon-2014-2.224
CREATED:20140331T221923
DESCRIPTION:scikit-learn is an awesome tool allowing developers with little or no machine learning knowledge to predict the future! But once you've trained a scikit-learn algorithm\, what now? In this talk\, I describe how to deploy a predictive model in a production environment using scikit-learn and RabbitMQ. You'll see a realtime content classification system to demonstrate this design.

https://us.pycon.org/2014/schedule/presentation/224/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>scikit-learn is an awesome tool allowing developers with little or no machine learning knowledge to predict the future! But once you've trained a scikit-learn algorithm\, what now? In this talk\, I describe how to deploy a predictive model in a production environment using scikit-learn and RabbitMQ. You'll see a realtime content classification system to demonstrate this design.<br><a href='https://us.pycon.org/2014/schedule/presentation/224/'>https://us.pycon.org/2014/schedule/presentation/224/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/224/
SUMMARY:Realtime predictive analytics using scikit-learn & RabbitMQ
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T151500
DTEND;TZID="Eastern Standard Time":20140411T160000
DTSTAMP:20140331T221923
UID:pycon-2014-2.192
CREATED:20140331T221923
DESCRIPTION:This talk will cover the internals of Python\, such AST\, Import hooks\, creating a console\, and a very brief overview of Python internal formats (such as pyc files)\, by way of looking over the implementation of a Lisp called 'Hy'. No Lisp knowledge is required.

https://us.pycon.org/2014/schedule/presentation/192/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk will cover the internals of Python\, such AST\, Import hooks\, creating a console\, and a very brief overview of Python internal formats (such as pyc files)\, by way of looking over the implementation of a Lisp called 'Hy'. No Lisp knowledge is required.<br><a href='https://us.pycon.org/2014/schedule/presentation/192/'>https://us.pycon.org/2014/schedule/presentation/192/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/192/
SUMMARY:Getting Hy on Python: How to implement a Lisp front-end to Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T161500
DTEND;TZID="Eastern Standard Time":20140411T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.140
CREATED:20140331T221923
DESCRIPTION:Distributed computing is challenging. The network can be spotty. The servers can be pushed too hard. Race conditions can show up. Tasks can seem to disappear. Deployment can be messy. Celery is an excellent tool for writing distributed applications and this talk focuses on real-world challenges faced when doing those tasks.

https://us.pycon.org/2014/schedule/presentation/140/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Distributed computing is challenging. The network can be spotty. The servers can be pushed too hard. Race conditions can show up. Tasks can seem to disappear. Deployment can be messy. Celery is an excellent tool for writing distributed applications and this talk focuses on real-world challenges faced when doing those tasks.<br><a href='https://us.pycon.org/2014/schedule/presentation/140/'>https://us.pycon.org/2014/schedule/presentation/140/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/140/
SUMMARY:Distributed Computing Is Hard, Lets Go Shopping
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T161500
DTEND;TZID="Eastern Standard Time":20140411T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.202
CREATED:20140331T221923
DESCRIPTION:There are a half-dozen major Python cryptography frameworks built on at least three separate C implementations\, each with their own strengths and weaknesses and in various states of maintenance. This presentation will review the current state of the art and discuss the future of crypto in Python including a new library under development\, PyPy support and more.

https://us.pycon.org/2014/schedule/presentation/202/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>There are a half-dozen major Python cryptography frameworks built on at least three separate C implementations\, each with their own strengths and weaknesses and in various states of maintenance. This presentation will review the current state of the art and discuss the future of crypto in Python including a new library under development\, PyPy support and more.<br><a href='https://us.pycon.org/2014/schedule/presentation/202/'>https://us.pycon.org/2014/schedule/presentation/202/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/202/
SUMMARY:The State of Crypto in Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T163000
DTEND;TZID="Eastern Standard Time":20140411T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.203
CREATED:20140331T221923
DESCRIPTION:Deploying a moderately complex web application has become quite a challenge over the years. As best-practices have evolved\, it has become progressively more time-consuming to keep up with what tools exist and how to use them effectively. This talk will provide an overview of the ecosystem and provide pointers for more information about individual components or problems.

https://us.pycon.org/2014/schedule/presentation/203/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Deploying a moderately complex web application has become quite a challenge over the years. As best-practices have evolved\, it has become progressively more time-consuming to keep up with what tools exist and how to use them effectively. This talk will provide an overview of the ecosystem and provide pointers for more information about individual components or problems.<br><a href='https://us.pycon.org/2014/schedule/presentation/203/'>https://us.pycon.org/2014/schedule/presentation/203/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/203/
SUMMARY:Application Deployment State of the Onion
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T163000
DTEND;TZID="Eastern Standard Time":20140411T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.146
CREATED:20140331T221923
DESCRIPTION:Come and learn the techniques used for generating random dungeon-like levels for games. You don't have to know what Rogue is to enjoy this talk. Prepare yourself for a plethora of Monty Python references and we'll have some fun.

https://us.pycon.org/2014/schedule/presentation/146/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Come and learn the techniques used for generating random dungeon-like levels for games. You don't have to know what Rogue is to enjoy this talk. Prepare yourself for a plethora of Monty Python references and we'll have some fun.<br><a href='https://us.pycon.org/2014/schedule/presentation/146/'>https://us.pycon.org/2014/schedule/presentation/146/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/146/
SUMMARY:Castle Anthrax: Dungeon Generation Techniques
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T163000
DTEND;TZID="Eastern Standard Time":20140411T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.233
CREATED:20140331T221923
DESCRIPTION:Blinking colored lights bring out the child in all of us. Color LED lighting technology is becoming more available and affordable. Layers of hardware\, lighting protocols\, and effects design can make doing anything more complex than blinking these lights tricky. Come learn about LEDs how to control them with Python\, and about building real-time control of physical things.

https://us.pycon.org/2014/schedule/presentation/233/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Blinking colored lights bring out the child in all of us. Color LED lighting technology is becoming more available and affordable. Layers of hardware\, lighting protocols\, and effects design can make doing anything more complex than blinking these lights tricky. Come learn about LEDs how to control them with Python\, and about building real-time control of physical things.<br><a href='https://us.pycon.org/2014/schedule/presentation/233/'>https://us.pycon.org/2014/schedule/presentation/233/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/233/
SUMMARY:Blending art, technology, and light, Python for interactive and real time LED installations
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T171000
DTEND;TZID="Eastern Standard Time":20140411T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.220
CREATED:20140331T221923
DESCRIPTION:Python is so well-suited for processing and managing geographic data\, I think they'll be best friends forever. In this talk\, I'll introduce some of the best Python libraries to use with your geodata\, and show you how treating GeoJSON like a Python dictionary can make cleaning and validating your data a breeze. I'll also discuss examples of using Python to add custom functionality to GIS software.

https://us.pycon.org/2014/schedule/presentation/220/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Python is so well-suited for processing and managing geographic data\, I think they'll be best friends forever. In this talk\, I'll introduce some of the best Python libraries to use with your geodata\, and show you how treating GeoJSON like a Python dictionary can make cleaning and validating your data a breeze. I'll also discuss examples of using Python to add custom functionality to GIS software.<br><a href='https://us.pycon.org/2014/schedule/presentation/220/'>https://us.pycon.org/2014/schedule/presentation/220/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/220/
SUMMARY:Python + Geographic Data = BFFs
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T171000
DTEND;TZID="Eastern Standard Time":20140411T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.218
CREATED:20140331T221923
DESCRIPTION:The most important yet underappreciated parts of concurrent APIs are good constructs for fan-out (one thread spawns others) and fan-in (many threads join together). This talk will show examples of fan-in and fan-out. It will cover the successes and shortcomings of APIs that provide concurrency. Finally\, we'll discuss how the async model of Tulip/PEP3156 is the ultimate API. The future is bright!

https://us.pycon.org/2014/schedule/presentation/218/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>The most important yet underappreciated parts of concurrent APIs are good constructs for fan-out (one thread spawns others) and fan-in (many threads join together). This talk will show examples of fan-in and fan-out. It will cover the successes and shortcomings of APIs that provide concurrency. Finally\, we'll discuss how the async model of Tulip/PEP3156 is the ultimate API. The future is bright!<br><a href='https://us.pycon.org/2014/schedule/presentation/218/'>https://us.pycon.org/2014/schedule/presentation/218/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/218/
SUMMARY:Fan-in and Fan-out: The crucial components of concurrency
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T171000
DTEND;TZID="Eastern Standard Time":20140411T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.214
CREATED:20140331T221923
DESCRIPTION:Telecomix is an ad-hoc activist cluster that supports free communication around the world\, most notably during the Arab Spring. This talk will tell stories of humans and machines\, and reflect on lessons learned from 3 years of hands-on 'hacktivism'.  We'll explore similarities with the free software community. It follows up a 2011 Pycon lightning talk given shortly after Tahrir Square.

https://us.pycon.org/2014/schedule/presentation/214/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Telecomix is an ad-hoc activist cluster that supports free communication around the world\, most notably during the Arab Spring. This talk will tell stories of humans and machines\, and reflect on lessons learned from 3 years of hands-on 'hacktivism'.  We'll explore similarities with the free software community. It follows up a 2011 Pycon lightning talk given shortly after Tahrir Square.<br><a href='https://us.pycon.org/2014/schedule/presentation/214/'>https://us.pycon.org/2014/schedule/presentation/214/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/214/
SUMMARY:Free Software, Free People
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T171000
DTEND;TZID="Eastern Standard Time":20140411T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.213
CREATED:20140331T221923
DESCRIPTION:Live and direct from the PyCon stage learn how to connect your things to the internet! In this talk we’ll connect physical things and people to the internet.  In this talk we will live code a tiny web server that interacts with the physical world via sensors\, actuators\, video\, and audio.  We will  explore tools in the Python ecosystem that make this possible and show how they work together.

https://us.pycon.org/2014/schedule/presentation/213/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Live and direct from the PyCon stage learn how to connect your things to the internet! In this talk we’ll connect physical things and people to the internet.  In this talk we will live code a tiny web server that interacts with the physical world via sensors\, actuators\, video\, and audio.  We will  explore tools in the Python ecosystem that make this possible and show how they work together.<br><a href='https://us.pycon.org/2014/schedule/presentation/213/'>https://us.pycon.org/2014/schedule/presentation/213/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/213/
SUMMARY:Hello Physical World: A Crash Course on the Internet of Things
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140411T171000
DTEND;TZID="Eastern Standard Time":20140411T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.208
CREATED:20140331T221923
DESCRIPTION:What does it take to make a Python sandbox that can run untrusted code? Learn some surprising language features and experience security challenges first-hand as we work through building a Python sandbox from scratch. You'll leave this talk with renewed appreciation for the dynamic nature of Python\, some sneaky language tricks\, and a solid background in classes of sandboxing security issues.

https://us.pycon.org/2014/schedule/presentation/208/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>What does it take to make a Python sandbox that can run untrusted code? Learn some surprising language features and experience security challenges first-hand as we work through building a Python sandbox from scratch. You'll leave this talk with renewed appreciation for the dynamic nature of Python\, some sneaky language tricks\, and a solid background in classes of sandboxing security issues.<br><a href='https://us.pycon.org/2014/schedule/presentation/208/'>https://us.pycon.org/2014/schedule/presentation/208/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/208/
SUMMARY:Building and breaking a Python sandbox
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T105000
DTEND;TZID="Eastern Standard Time":20140412T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.209
CREATED:20140331T221923
DESCRIPTION:Docker is a tool for sandboxing entire application environments using Linux containers. Docker's feature set includes versioning\, sharing etc.  They are light-weight and fast\, you can recreate a deployment environment in development or push your development containers to production. Imagine never having to worry about fragmentation of servers or syncing the versions of different libraries.

https://us.pycon.org/2014/schedule/presentation/209/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Docker is a tool for sandboxing entire application environments using Linux containers. Docker's feature set includes versioning\, sharing etc.  They are light-weight and fast\, you can recreate a deployment environment in development or push your development containers to production. Imagine never having to worry about fragmentation of servers or syncing the versions of different libraries.<br><a href='https://us.pycon.org/2014/schedule/presentation/209/'>https://us.pycon.org/2014/schedule/presentation/209/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/209/
SUMMARY:Introduction to Docker
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T105000
DTEND;TZID="Eastern Standard Time":20140412T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.183
CREATED:20140331T221923
DESCRIPTION:Have you ever wanted to play video games while also contributing to science? In psychology experiments developed by myself and Peter Battaglia\, participants are immersed in an interactive 3D world which is experimentally well-controlled\, yet also extremely fun. This talk will explain how we created these 'game-like' experiments in Python using the Panda3D video game engine.

https://us.pycon.org/2014/schedule/presentation/183/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Have you ever wanted to play video games while also contributing to science? In psychology experiments developed by myself and Peter Battaglia\, participants are immersed in an interactive 3D world which is experimentally well-controlled\, yet also extremely fun. This talk will explain how we created these 'game-like' experiments in Python using the Panda3D video game engine.<br><a href='https://us.pycon.org/2014/schedule/presentation/183/'>https://us.pycon.org/2014/schedule/presentation/183/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/183/
SUMMARY:Games for Science: Creating interactive psychology experiments in Python with Panda3D
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T105000
DTEND;TZID="Eastern Standard Time":20140412T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.165
CREATED:20140331T221923
DESCRIPTION:Memory leaks in Python cannot be analyzed with traditional tools because Python uses reference counters. I will present tools specific to Python to help you to localize your memory leaks.

https://us.pycon.org/2014/schedule/presentation/165/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Memory leaks in Python cannot be analyzed with traditional tools because Python uses reference counters. I will present tools specific to Python to help you to localize your memory leaks.<br><a href='https://us.pycon.org/2014/schedule/presentation/165/'>https://us.pycon.org/2014/schedule/presentation/165/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/165/
SUMMARY:Track memory leaks in Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T105000
DTEND;TZID="Eastern Standard Time":20140412T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.166
CREATED:20140331T221923
DESCRIPTION:A simple 'Hello World!' page\, served via Django\, passes though a surprising number of layers & components. For a newcomer to the language or the platform\, this can be overwhelming at the start. Here I'll take you on a drive through Django's request-response cycle\, focusing on using its layered model to understand what's going on and get things done.

https://us.pycon.org/2014/schedule/presentation/166/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>A simple 'Hello World!' page\, served via Django\, passes though a surprising number of layers & components. For a newcomer to the language or the platform\, this can be overwhelming at the start. Here I'll take you on a drive through Django's request-response cycle\, focusing on using its layered model to understand what's going on and get things done.<br><a href='https://us.pycon.org/2014/schedule/presentation/166/'>https://us.pycon.org/2014/schedule/presentation/166/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/166/
SUMMARY:A Scenic Drive through the Django Request-Response Cycle
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T105000
DTEND;TZID="Eastern Standard Time":20140412T112000
DTSTAMP:20140331T221923
UID:pycon-2014-2.149
CREATED:20140331T221923
DESCRIPTION:You can create a web application with Flask in seven lines of code\, and you can grow that app to thousands. How do you create reusable\, shareable libraries? We'll use a simple but real extension I created (Flask-FeatureFlags) to look at the different ways you can make Flask awesome.

https://us.pycon.org/2014/schedule/presentation/149/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>You can create a web application with Flask in seven lines of code\, and you can grow that app to thousands. How do you create reusable\, shareable libraries? We'll use a simple but real extension I created (Flask-FeatureFlags) to look at the different ways you can make Flask awesome.<br><a href='https://us.pycon.org/2014/schedule/presentation/149/'>https://us.pycon.org/2014/schedule/presentation/149/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/149/
SUMMARY:Developing Flask Extensions
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T113000
DTEND;TZID="Eastern Standard Time":20140412T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.153
CREATED:20140331T221923
DESCRIPTION:This talk will explore how garbage collection is implemented in CPython and PyPy. See how CPython deals reference counting's shortcomings with a special GC for cycle collection. Then dive into PyPy's sophisticated and high-performing GC implementations. The particularly thorny issue of finalizers in reference cycles will also be addressed.

https://us.pycon.org/2014/schedule/presentation/153/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk will explore how garbage collection is implemented in CPython and PyPy. See how CPython deals reference counting's shortcomings with a special GC for cycle collection. Then dive into PyPy's sophisticated and high-performing GC implementations. The particularly thorny issue of finalizers in reference cycles will also be addressed.<br><a href='https://us.pycon.org/2014/schedule/presentation/153/'>https://us.pycon.org/2014/schedule/presentation/153/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/153/
SUMMARY:Garbage Collection in Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T113000
DTEND;TZID="Eastern Standard Time":20140412T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.161
CREATED:20140331T221923
DESCRIPTION:Django finally has built-in migrations\, and they're a long way from the designs of South or django-evolution. Learn the key design decisions we made\, ideas we discarded\, and the unique treatment we have to give each of our four official database backends.

https://us.pycon.org/2014/schedule/presentation/161/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Django finally has built-in migrations\, and they're a long way from the designs of South or django-evolution. Learn the key design decisions we made\, ideas we discarded\, and the unique treatment we have to give each of our four official database backends.<br><a href='https://us.pycon.org/2014/schedule/presentation/161/'>https://us.pycon.org/2014/schedule/presentation/161/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/161/
SUMMARY:Designing Django's Migrations
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T113000
DTEND;TZID="Eastern Standard Time":20140412T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.210
CREATED:20140331T221923
DESCRIPTION:Have you ever wished that you can write Python in the browser? Brython is an experimental Javascript library that enables you to leverage the elegance of Python on the client side. Novice programmers who are familiar with Javascript will learn about Brython\, how Brython measures up against Javascript\, and why getting client-side Python adopted as a mainstream tool is really difficult.

https://us.pycon.org/2014/schedule/presentation/210/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Have you ever wished that you can write Python in the browser? Brython is an experimental Javascript library that enables you to leverage the elegance of Python on the client side. Novice programmers who are familiar with Javascript will learn about Brython\, how Brython measures up against Javascript\, and why getting client-side Python adopted as a mainstream tool is really difficult.<br><a href='https://us.pycon.org/2014/schedule/presentation/210/'>https://us.pycon.org/2014/schedule/presentation/210/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/210/
SUMMARY:Python in the Browser: Intro to Brython
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T113000
DTEND;TZID="Eastern Standard Time":20140412T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.172
CREATED:20140331T221923
DESCRIPTION:You might know what an API is. Maybe you've even implemented a handful of popular APIs out there\, but you are thinking about building your own and don’t know where to start. This talk will show you how easy it is to build an API into your project using Python and Flask. We’ll also discuss best practices and design patterns for great APIs.

https://us.pycon.org/2014/schedule/presentation/172/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>You might know what an API is. Maybe you've even implemented a handful of popular APIs out there\, but you are thinking about building your own and don’t know where to start. This talk will show you how easy it is to build an API into your project using Python and Flask. We’ll also discuss best practices and design patterns for great APIs.<br><a href='https://us.pycon.org/2014/schedule/presentation/172/'>https://us.pycon.org/2014/schedule/presentation/172/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/172/
SUMMARY:So You Want to Build an API?
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T113000
DTEND;TZID="Eastern Standard Time":20140412T120000
DTSTAMP:20140331T221923
UID:pycon-2014-2.188
CREATED:20140331T221923
DESCRIPTION:One of the great features of Python is its machine learning capabilities. Scikit is a rich Python package which allows developers to create predictive apps.  In this presentation\, we will guess what type of music do Python programmers like to listen to\, using Scikit and the k-nearest neighbor algorithm.

https://us.pycon.org/2014/schedule/presentation/188/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>One of the great features of Python is its machine learning capabilities. Scikit is a rich Python package which allows developers to create predictive apps.  In this presentation\, we will guess what type of music do Python programmers like to listen to\, using Scikit and the k-nearest neighbor algorithm.<br><a href='https://us.pycon.org/2014/schedule/presentation/188/'>https://us.pycon.org/2014/schedule/presentation/188/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/188/
SUMMARY:Know Thy Neighbor: Scikit and the K-Nearest Neighbor Algorithm
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T121000
DTEND;TZID="Eastern Standard Time":20140412T124000
DTSTAMP:20140331T221923
UID:pycon-2014-2.160
CREATED:20140331T221923
DESCRIPTION:How to make our Python web development workflow less painful and more predictable? By mixing a collection of tools and best practices for both back and front ends like Buildout\, Grunt\, Bower and Ansible to automate tasks.

https://us.pycon.org/2014/schedule/presentation/160/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>How to make our Python web development workflow less painful and more predictable? By mixing a collection of tools and best practices for both back and front ends like Buildout\, Grunt\, Bower and Ansible to automate tasks.<br><a href='https://us.pycon.org/2014/schedule/presentation/160/'>https://us.pycon.org/2014/schedule/presentation/160/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/160/
SUMMARY:Upgrade your Web Development Toolchain
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T121000
DTEND;TZID="Eastern Standard Time":20140412T124000
DTSTAMP:20140331T221923
UID:pycon-2014-2.179
CREATED:20140331T221923
DESCRIPTION:Have you ever wondered which rapper is the most sexist? Come learn how to find out by scraping rapgenius and analyzing rap lyrics using Python with libraries like pattern and Beautiful Soup! There will be pictures of Lil' Jon.

https://us.pycon.org/2014/schedule/presentation/179/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Have you ever wondered which rapper is the most sexist? Come learn how to find out by scraping rapgenius and analyzing rap lyrics using Python with libraries like pattern and Beautiful Soup! There will be pictures of Lil' Jon.<br><a href='https://us.pycon.org/2014/schedule/presentation/179/'>https://us.pycon.org/2014/schedule/presentation/179/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/179/
SUMMARY:Analyzing Rap Lyrics with Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T121000
DTEND;TZID="Eastern Standard Time":20140412T125500
DTSTAMP:20140331T221923
UID:pycon-2014-2.207
CREATED:20140331T221923
DESCRIPTION:The language you speak determines the thoughts you can think. Thus\, API designers (and that includes you\, if you've ever coined a function) have a great duty\, as language inventors\, to expand the mental canvases of those who come after. We'll concretize that into 7 hallmarks of good APIs\, pulling examples (and bloopers) from popular Python libraries.

https://us.pycon.org/2014/schedule/presentation/207/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>The language you speak determines the thoughts you can think. Thus\, API designers (and that includes you\, if you've ever coined a function) have a great duty\, as language inventors\, to expand the mental canvases of those who come after. We'll concretize that into 7 hallmarks of good APIs\, pulling examples (and bloopers) from popular Python libraries.<br><a href='https://us.pycon.org/2014/schedule/presentation/207/'>https://us.pycon.org/2014/schedule/presentation/207/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/207/
SUMMARY:Designing Poetic APIs
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T121000
DTEND;TZID="Eastern Standard Time":20140412T125500
DTSTAMP:20140331T221923
UID:pycon-2014-2.190
CREATED:20140331T221923
DESCRIPTION:Sometimes\, the code you need just isn't available in Python\, but someone's written some code in another language that solves your problem. What options do you have for interacting with this external code from within your program? We'll examine how to call external binaries\, what happens behind the scenes at a systems level\, and how these implementation details affect performance and memory usage. In the second part of the talk\, we'll discuss the different options for more tightly integrating external code in the form of a C library for better performance and control.

https://us.pycon.org/2014/schedule/presentation/190/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Sometimes\, the code you need just isn't available in Python\, but someone's written some code in another language that solves your problem. What options do you have for interacting with this external code from within your program? We'll examine how to call external binaries\, what happens behind the scenes at a systems level\, and how these implementation details affect performance and memory usage. In the second part of the talk\, we'll discuss the different options for more tightly integrating external code in the form of a C library for better performance and control.<br><a href='https://us.pycon.org/2014/schedule/presentation/190/'>https://us.pycon.org/2014/schedule/presentation/190/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/190/
SUMMARY:Subprocess to FFI: Memory, Performance, and Why You Shouldn't Shell Out
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T121000
DTEND;TZID="Eastern Standard Time":20140412T125500
DTSTAMP:20140331T221923
UID:pycon-2014-2.231
CREATED:20140331T221923
DESCRIPTION:Lots of talks and tutorials try to cover Django exhaustively\, going over every component and feature. But not so many take a look at the bits that let Django be Django. In this talk\, we'll see exactly what those bits -- some old\, some new -- are\, in a way that shows why it's still a solid and popular choice for web developers nearly nine years after its initial public release.

https://us.pycon.org/2014/schedule/presentation/231/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Lots of talks and tutorials try to cover Django exhaustively\, going over every component and feature. But not so many take a look at the bits that let Django be Django. In this talk\, we'll see exactly what those bits -- some old\, some new -- are\, in a way that shows why it's still a solid and popular choice for web developers nearly nine years after its initial public release.<br><a href='https://us.pycon.org/2014/schedule/presentation/231/'>https://us.pycon.org/2014/schedule/presentation/231/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/231/
SUMMARY:Django: The good parts
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T134000
DTEND;TZID="Eastern Standard Time":20140412T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.221
CREATED:20140331T221923
DESCRIPTION:Flask is a web framework for Python based on Werkzeug\, Jinja 2 and good intentions. It is considered a micro-framework\, but don't get the 'micro' part fool you; Flask can do everything the 'others' can do\, many times in a simpler\, leaner way.  This session will introduce you to Flask as an engine to build RESTful web services.

https://us.pycon.org/2014/schedule/presentation/221/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Flask is a web framework for Python based on Werkzeug\, Jinja 2 and good intentions. It is considered a micro-framework\, but don't get the 'micro' part fool you; Flask can do everything the 'others' can do\, many times in a simpler\, leaner way.  This session will introduce you to Flask as an engine to build RESTful web services.<br><a href='https://us.pycon.org/2014/schedule/presentation/221/'>https://us.pycon.org/2014/schedule/presentation/221/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/221/
SUMMARY:Writing RESTful web services with Flask
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T134000
DTEND;TZID="Eastern Standard Time":20140412T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.144
CREATED:20140331T221923
DESCRIPTION:Those web pages with shiny lock icons boasting that your data is safe because of “256 bit encryption”? They are lying. In times of mass surveillance and commercialized Internet crime you should know why that’s the case. This talk will give you an overview that will help you to assess your personal security more realistically and to make your applications as secure as possible against all odds.

https://us.pycon.org/2014/schedule/presentation/144/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Those web pages with shiny lock icons boasting that your data is safe because of “256 bit encryption”? They are lying. In times of mass surveillance and commercialized Internet crime you should know why that’s the case. This talk will give you an overview that will help you to assess your personal security more realistically and to make your applications as secure as possible against all odds.<br><a href='https://us.pycon.org/2014/schedule/presentation/144/'>https://us.pycon.org/2014/schedule/presentation/144/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/144/
SUMMARY:The Sorry State of SSL
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T134000
DTEND;TZID="Eastern Standard Time":20140412T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.150
CREATED:20140331T221923
DESCRIPTION:If you've never written tests before\, you probably know you *should*\, but view the whole process as a bureaucratic paperwork nightmare to check off on your ready-to-ship checklist.  This is the wrong way to approach testing.  Tests are a solution to a problem that is important to you: does my code work?  I'll show how Python tests are written\, and why.

https://us.pycon.org/2014/schedule/presentation/150/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>If you've never written tests before\, you probably know you *should*\, but view the whole process as a bureaucratic paperwork nightmare to check off on your ready-to-ship checklist.  This is the wrong way to approach testing.  Tests are a solution to a problem that is important to you: does my code work?  I'll show how Python tests are written\, and why.<br><a href='https://us.pycon.org/2014/schedule/presentation/150/'>https://us.pycon.org/2014/schedule/presentation/150/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/150/
SUMMARY:Getting Started Testing
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T135500
DTEND;TZID="Eastern Standard Time":20140412T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.148
CREATED:20140331T221923
DESCRIPTION:I'll walk you through Python's best tools for getting a grip on  data: IPython Notebook and pandas. I'll show you how to read in data\, clean it up\, graph it\, and draw some conclusions\, using some open data about the number of cyclists on Montréal's bike paths as an example.

https://us.pycon.org/2014/schedule/presentation/148/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>I'll walk you through Python's best tools for getting a grip on  data: IPython Notebook and pandas. I'll show you how to read in data\, clean it up\, graph it\, and draw some conclusions\, using some open data about the number of cyclists on Montréal's bike paths as an example.<br><a href='https://us.pycon.org/2014/schedule/presentation/148/'>https://us.pycon.org/2014/schedule/presentation/148/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/148/
SUMMARY:Diving into Open Data with IPython Notebook & Pandas
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T135500
DTEND;TZID="Eastern Standard Time":20140412T142500
DTSTAMP:20140331T221923
UID:pycon-2014-2.139
CREATED:20140331T221923
DESCRIPTION:This talk provides a broad-based introduction to SQLAlchemy Core library. It is focused on someone new to SQLAlchemy Core\, who has experience with other database technologies such as Django or SQLAlchemy ORM. We'll cover the differences between the domain-centric models of those tools compared to the schema-centric model and how we can use that to deal with common and unusual data sources.

https://us.pycon.org/2014/schedule/presentation/139/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk provides a broad-based introduction to SQLAlchemy Core library. It is focused on someone new to SQLAlchemy Core\, who has experience with other database technologies such as Django or SQLAlchemy ORM. We'll cover the differences between the domain-centric models of those tools compared to the schema-centric model and how we can use that to deal with common and unusual data sources.<br><a href='https://us.pycon.org/2014/schedule/presentation/139/'>https://us.pycon.org/2014/schedule/presentation/139/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/139/
SUMMARY:Introduction to SQLAlchemy Core
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T143500
DTEND;TZID="Eastern Standard Time":20140412T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.212
CREATED:20140331T221923
DESCRIPTION:Unit testing is like public transit: everyone agrees it's a good thing for other people to do. It's easier to swallow when you see how unit testing improves not only the correctness of your code\, but the design as well. I'll walk through a real-life case study where adding unit tests turned a pretty good module into an even better one: easier to understand\, extend\, and reuse.

https://us.pycon.org/2014/schedule/presentation/212/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Unit testing is like public transit: everyone agrees it's a good thing for other people to do. It's easier to swallow when you see how unit testing improves not only the correctness of your code\, but the design as well. I'll walk through a real-life case study where adding unit tests turned a pretty good module into an even better one: easier to understand\, extend\, and reuse.<br><a href='https://us.pycon.org/2014/schedule/presentation/212/'>https://us.pycon.org/2014/schedule/presentation/212/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/212/
SUMMARY:Unit Testing Makes Your Code Better
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T143500
DTEND;TZID="Eastern Standard Time":20140412T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.142
CREATED:20140331T221923
DESCRIPTION:Working with developers on schema migrations is a perennial challenge for DBAs and developers. Devs tend to like a 'set it and forget it' tool. This talk discusses the strategies used to move from a pure SQL and shell migration system to using SQLAlchemy and alembic for maximum DBA and developer happiness.

https://us.pycon.org/2014/schedule/presentation/142/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Working with developers on schema migrations is a perennial challenge for DBAs and developers. Devs tend to like a 'set it and forget it' tool. This talk discusses the strategies used to move from a pure SQL and shell migration system to using SQLAlchemy and alembic for maximum DBA and developer happiness.<br><a href='https://us.pycon.org/2014/schedule/presentation/142/'>https://us.pycon.org/2014/schedule/presentation/142/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/142/
SUMMARY:Sane schema migrations with Alembic and SQLAlchemy
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T143500
DTEND;TZID="Eastern Standard Time":20140412T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.181
CREATED:20140331T221923
DESCRIPTION:Cloud computing offers some great opportunities for science\, but most cloud computing platforms are I/O and memory limited\, and hence are poor matches for data-intensive computing.  After 4 years of research software development we are now instrumenting and benchmarking our analysis pipelines; numbers\, lessons learned\, and future plans will be discussed. Everything is open source.

https://us.pycon.org/2014/schedule/presentation/181/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Cloud computing offers some great opportunities for science\, but most cloud computing platforms are I/O and memory limited\, and hence are poor matches for data-intensive computing.  After 4 years of research software development we are now instrumenting and benchmarking our analysis pipelines; numbers\, lessons learned\, and future plans will be discussed. Everything is open source.<br><a href='https://us.pycon.org/2014/schedule/presentation/181/'>https://us.pycon.org/2014/schedule/presentation/181/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/181/
SUMMARY:Data intensive biology in the cloud: instrumenting ALL the things
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T143500
DTEND;TZID="Eastern Standard Time":20140412T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.216
CREATED:20140331T221923
DESCRIPTION:This talk will introduce you to Push Notifications\, a very powerful way for your Python service to communicate information to mobile devices. You will learn how Push Notifications work\, their advantages and disadvantages and how you can implement them on your Python projects.

https://us.pycon.org/2014/schedule/presentation/216/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk will introduce you to Push Notifications\, a very powerful way for your Python service to communicate information to mobile devices. You will learn how Push Notifications work\, their advantages and disadvantages and how you can implement them on your Python projects.<br><a href='https://us.pycon.org/2014/schedule/presentation/216/'>https://us.pycon.org/2014/schedule/presentation/216/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/216/
SUMMARY:REST is not enough: Using Push Notifications to better support your mobile clients
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T143500
DTEND;TZID="Eastern Standard Time":20140412T150500
DTSTAMP:20140331T221923
UID:pycon-2014-2.225
CREATED:20140331T221923
DESCRIPTION:Learn quick\, easy\, and lesser-known techniques to improve your website's security\, protect against session hijacking\, and defend against XSS and data injection attacks.

https://us.pycon.org/2014/schedule/presentation/225/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Learn quick\, easy\, and lesser-known techniques to improve your website's security\, protect against session hijacking\, and defend against XSS and data injection attacks.<br><a href='https://us.pycon.org/2014/schedule/presentation/225/'>https://us.pycon.org/2014/schedule/presentation/225/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/225/
SUMMARY:Quick Wins for Better Website Security
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T151500
DTEND;TZID="Eastern Standard Time":20140412T154500
DTSTAMP:20140331T221923
UID:pycon-2014-2.169
CREATED:20140331T221923
DESCRIPTION:A brief overview of what multifactor authentication is\, focusing particularly on possession factors\, including what common options are available.   One-time-passwords\, an important concept many possession factor types\, will also be discussed.

https://us.pycon.org/2014/schedule/presentation/169/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>A brief overview of what multifactor authentication is\, focusing particularly on possession factors\, including what common options are available.   One-time-passwords\, an important concept many possession factor types\, will also be discussed.<br><a href='https://us.pycon.org/2014/schedule/presentation/169/'>https://us.pycon.org/2014/schedule/presentation/169/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/169/
SUMMARY:Multi-factor Authentication - Possession Factors
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T151500
DTEND;TZID="Eastern Standard Time":20140412T154500
DTSTAMP:20140331T221923
UID:pycon-2014-2.195
CREATED:20140331T221923
DESCRIPTION:Taba is a distributed metrics aggregator\, similar in concept to statsd. Built with Python using Redis\, gevent\, and Cython\, it currently handles over 6M events/sec with strong consistency guarantees. This talk will present an overview of its design\, and discuss the challenges and solutions encountered in the process of building a high throughput\, low latency distributed service.

https://us.pycon.org/2014/schedule/presentation/195/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Taba is a distributed metrics aggregator\, similar in concept to statsd. Built with Python using Redis\, gevent\, and Cython\, it currently handles over 6M events/sec with strong consistency guarantees. This talk will present an overview of its design\, and discuss the challenges and solutions encountered in the process of building a high throughput\, low latency distributed service.<br><a href='https://us.pycon.org/2014/schedule/presentation/195/'>https://us.pycon.org/2014/schedule/presentation/195/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/195/
SUMMARY:Pushing Python: Building a High Throughput, Low Latency System
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T151500
DTEND;TZID="Eastern Standard Time":20140412T160000
DTSTAMP:20140331T221923
UID:pycon-2014-2.198
CREATED:20140331T221923
DESCRIPTION:So\, what happens when you lock a Python programmer in a secret vault containing 1.5 TBytes of C++ source code and no internet connection?  Find out as I describe how I used Python as a secret weapon of 'discovery' in an epic legal battle.

https://us.pycon.org/2014/schedule/presentation/198/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>So\, what happens when you lock a Python programmer in a secret vault containing 1.5 TBytes of C++ source code and no internet connection?  Find out as I describe how I used Python as a secret weapon of 'discovery' in an epic legal battle.<br><a href='https://us.pycon.org/2014/schedule/presentation/198/'>https://us.pycon.org/2014/schedule/presentation/198/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/198/
SUMMARY:Discovering Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T151500
DTEND;TZID="Eastern Standard Time":20140412T160000
DTSTAMP:20140331T221923
UID:pycon-2014-2.187
CREATED:20140331T221923
DESCRIPTION:In this talk we'll illustrate a simple web application using SQLAlchemy\, showing off the style of development that SQLAlchemy is most geared towards\, the so-called 'foundational' style which provides for development and maintainance of custom  conventions which then service the needs of the model declarations and use case implementations.

https://us.pycon.org/2014/schedule/presentation/187/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>In this talk we'll illustrate a simple web application using SQLAlchemy\, showing off the style of development that SQLAlchemy is most geared towards\, the so-called 'foundational' style which provides for development and maintainance of custom  conventions which then service the needs of the model declarations and use case implementations.<br><a href='https://us.pycon.org/2014/schedule/presentation/187/'>https://us.pycon.org/2014/schedule/presentation/187/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/187/
SUMMARY:Building the App
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T151500
DTEND;TZID="Eastern Standard Time":20140412T160000
DTSTAMP:20140331T221923
UID:pycon-2014-2.205
CREATED:20140331T221923
DESCRIPTION:Python includes a powerful debugger\, but using it well requires practice. Setting a break point and inspecting local variables is easy\, but what else can you do? What if you need to set the breakpoint in one of your dependencies\, or only fire it conditionally? How do you navigate calls\, or change them? Join me for an in depth look at how you can better use PDB to debug and understand programs.

https://us.pycon.org/2014/schedule/presentation/205/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Python includes a powerful debugger\, but using it well requires practice. Setting a break point and inspecting local variables is easy\, but what else can you do? What if you need to set the breakpoint in one of your dependencies\, or only fire it conditionally? How do you navigate calls\, or change them? Join me for an in depth look at how you can better use PDB to debug and understand programs.<br><a href='https://us.pycon.org/2014/schedule/presentation/205/'>https://us.pycon.org/2014/schedule/presentation/205/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/205/
SUMMARY:In Depth PDB
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T161500
DTEND;TZID="Eastern Standard Time":20140412T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.174
CREATED:20140331T221923
DESCRIPTION:This talk will explain how Software Carpentry has grown to run over a hundred training events a year\, what we've learned along the way\, and how you can do it too.

https://us.pycon.org/2014/schedule/presentation/174/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk will explain how Software Carpentry has grown to run over a hundred training events a year\, what we've learned along the way\, and how you can do it too.<br><a href='https://us.pycon.org/2014/schedule/presentation/174/'>https://us.pycon.org/2014/schedule/presentation/174/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/174/
SUMMARY:Software Carpentry: Lessons Learned
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T161500
DTEND;TZID="Eastern Standard Time":20140412T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.219
CREATED:20140331T221923
DESCRIPTION:This talk covers the practical use of Python packaging tools. You'll see how to keep your system clean as an end user excited about installing a Python module from the web\, the purpose of setup.py\, how virtualenv makes life easier (and sometimes harder)\, what Ubuntu/Debian tools can offer\, and how to make a complex app easier for new contributors to run. It is heavy on stories and recommendations.

https://us.pycon.org/2014/schedule/presentation/219/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk covers the practical use of Python packaging tools. You'll see how to keep your system clean as an end user excited about installing a Python module from the web\, the purpose of setup.py\, how virtualenv makes life easier (and sometimes harder)\, what Ubuntu/Debian tools can offer\, and how to make a complex app easier for new contributors to run. It is heavy on stories and recommendations.<br><a href='https://us.pycon.org/2014/schedule/presentation/219/'>https://us.pycon.org/2014/schedule/presentation/219/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/219/
SUMMARY:Python packaging simplified, for end users, app developers, and open source contributors
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T163000
DTEND;TZID="Eastern Standard Time":20140412T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.162
CREATED:20140331T221923
DESCRIPTION:Using Python and a minimal amount of hardware hacking\, it's possible to build computer controlled helicopters you can fly around your living room for surprisingly small amounts of money. This talk will describe the steps you'll need to take to start the ball rolling towards Skynet using a $20 helicopter and an Arduino.

https://us.pycon.org/2014/schedule/presentation/162/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Using Python and a minimal amount of hardware hacking\, it's possible to build computer controlled helicopters you can fly around your living room for surprisingly small amounts of money. This talk will describe the steps you'll need to take to start the ball rolling towards Skynet using a $20 helicopter and an Arduino.<br><a href='https://us.pycon.org/2014/schedule/presentation/162/'>https://us.pycon.org/2014/schedule/presentation/162/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/162/
SUMMARY:Cheap Helicopters In My Living Room
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T163000
DTEND;TZID="Eastern Standard Time":20140412T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.199
CREATED:20140331T221923
DESCRIPTION:This talk will present multiple advanced techniques for Web functional testing. You will learn how to test a wide range of Web front-end components\, such as CSS\, visuals\, responsive designs and user interactions — all using Python. Various practical tips will also be presented to harness your functional tests in real project workflows.

https://us.pycon.org/2014/schedule/presentation/199/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk will present multiple advanced techniques for Web functional testing. You will learn how to test a wide range of Web front-end components\, such as CSS\, visuals\, responsive designs and user interactions — all using Python. Various practical tips will also be presented to harness your functional tests in real project workflows.<br><a href='https://us.pycon.org/2014/schedule/presentation/199/'>https://us.pycon.org/2014/schedule/presentation/199/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/199/
SUMMARY:Advanced techniques for Web functional testing
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T163000
DTEND;TZID="Eastern Standard Time":20140412T170000
DTSTAMP:20140331T221923
UID:pycon-2014-2.197
CREATED:20140331T221923
DESCRIPTION:The common wisdom is that Python is slow. And yet people run high performance software on it. It's hard to make Python fast\, and yet there are incredibly high performance Python VMs. This talk breaks down the facts and the myths of Python performance.

https://us.pycon.org/2014/schedule/presentation/197/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>The common wisdom is that Python is slow. And yet people run high performance software on it. It's hard to make Python fast\, and yet there are incredibly high performance Python VMs. This talk breaks down the facts and the myths of Python performance.<br><a href='https://us.pycon.org/2014/schedule/presentation/197/'>https://us.pycon.org/2014/schedule/presentation/197/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/197/
SUMMARY:Fast Python, Slow Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T171000
DTEND;TZID="Eastern Standard Time":20140412T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.282
CREATED:20140331T221923
DESCRIPTION:The objective of this session is to give the audience an idea of how they should choose a messaging layer for their application - how to evaluate their requirements against the features of the tools and make a choice. I will use my experience with building messaging applications to present a methodology which they can use

https://us.pycon.org/2014/schedule/presentation/282/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>The objective of this session is to give the audience an idea of how they should choose a messaging layer for their application - how to evaluate their requirements against the features of the tools and make a choice. I will use my experience with building messaging applications to present a methodology which they can use<br><a href='https://us.pycon.org/2014/schedule/presentation/282/'>https://us.pycon.org/2014/schedule/presentation/282/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/282/
SUMMARY:Which messaging layer should you use if you want to build a loosely coupled distributed Python app?
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T171000
DTEND;TZID="Eastern Standard Time":20140412T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.164
CREATED:20140331T221923
DESCRIPTION:It can be hard to focus on your love of coding when you are regularly battling invisible issues like insecurity\, anxiety\, and lack of confidence. This talk will identify invisible issues programmers struggle with\, talk about their impact\, discuss personal experiences dealing with them\, and share some tools useful in fighting back.

https://us.pycon.org/2014/schedule/presentation/164/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>It can be hard to focus on your love of coding when you are regularly battling invisible issues like insecurity\, anxiety\, and lack of confidence. This talk will identify invisible issues programmers struggle with\, talk about their impact\, discuss personal experiences dealing with them\, and share some tools useful in fighting back.<br><a href='https://us.pycon.org/2014/schedule/presentation/164/'>https://us.pycon.org/2014/schedule/presentation/164/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/164/
SUMMARY:It's Dangerous to Go Alone: Battling the Invisible Monsters in Tech
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T171000
DTEND;TZID="Eastern Standard Time":20140412T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.194
CREATED:20140331T221923
DESCRIPTION:This talk documents the journey of a less than conventional robotics application in which python is used as the logical controller of an autonomous 20 foot blimp.  The blimp's autopilot features\, prolonged air time\, large size\, and smooth motion make it the ideal platform for aerial photography.  Giving the blimp an onboard controller reduces the overall costs and requirements of the operation.

https://us.pycon.org/2014/schedule/presentation/194/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk documents the journey of a less than conventional robotics application in which python is used as the logical controller of an autonomous 20 foot blimp.  The blimp's autopilot features\, prolonged air time\, large size\, and smooth motion make it the ideal platform for aerial photography.  Giving the blimp an onboard controller reduces the overall costs and requirements of the operation.<br><a href='https://us.pycon.org/2014/schedule/presentation/194/'>https://us.pycon.org/2014/schedule/presentation/194/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/194/
SUMMARY:Programming an Autonomous 20 Foot Blimp with Python
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T171000
DTEND;TZID="Eastern Standard Time":20140412T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.204
CREATED:20140331T221923
DESCRIPTION:In the last 18 months the Python packaging world has seen an explosion of activity. Learn what improvements are available now and what is on the horizon.

https://us.pycon.org/2014/schedule/presentation/204/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>In the last 18 months the Python packaging world has seen an explosion of activity. Learn what improvements are available now and what is on the horizon.<br><a href='https://us.pycon.org/2014/schedule/presentation/204/'>https://us.pycon.org/2014/schedule/presentation/204/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/204/
SUMMARY:What is coming in Python packaging
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140412T171000
DTEND;TZID="Eastern Standard Time":20140412T174000
DTSTAMP:20140331T221923
UID:pycon-2014-2.228
CREATED:20140331T221923
DESCRIPTION:Donald Knuth famously said that we should avoid optimization 97% of the time and focus on the 'critical 3%'. How can we identify that 3%? How can we best focus our optimization efforts\, and avoid the 'root of all evil' that is premature optimization? This talk introduces key types of performance testing\, and demonstrates how they can be paired with profiling techniques in a cycle of improvement.

https://us.pycon.org/2014/schedule/presentation/228/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Donald Knuth famously said that we should avoid optimization 97% of the time and focus on the 'critical 3%'. How can we identify that 3%? How can we best focus our optimization efforts\, and avoid the 'root of all evil' that is premature optimization? This talk introduces key types of performance testing\, and demonstrates how they can be paired with profiling techniques in a cycle of improvement.<br><a href='https://us.pycon.org/2014/schedule/presentation/228/'>https://us.pycon.org/2014/schedule/presentation/228/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/228/
SUMMARY:Performance Testing and Profiling: A Virtuous Cycle
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T131000
DTEND;TZID="Eastern Standard Time":20140413T134000
DTSTAMP:20140331T221923
UID:pycon-2014-2.141
CREATED:20140331T221923
DESCRIPTION:To many developers the database is a black box. You expect to be able to put data into your database\, have it to stay there\, and get it out when you query it... hopefully in a performant manner. When its not performant enough the two options are usually add some indexes or throw some hardware at it. We'll walk through a bit of a clearer guide of how you can understand and manage DB performance.

https://us.pycon.org/2014/schedule/presentation/141/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>To many developers the database is a black box. You expect to be able to put data into your database\, have it to stay there\, and get it out when you query it... hopefully in a performant manner. When its not performant enough the two options are usually add some indexes or throw some hardware at it. We'll walk through a bit of a clearer guide of how you can understand and manage DB performance.<br><a href='https://us.pycon.org/2014/schedule/presentation/141/'>https://us.pycon.org/2014/schedule/presentation/141/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/141/
SUMMARY:Postgres Performance for Humans
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T131000
DTEND;TZID="Eastern Standard Time":20140413T134000
DTSTAMP:20140331T221923
UID:pycon-2014-2.223
CREATED:20140331T221923
DESCRIPTION:This is a talk about how to make junior and new engineers into independent and productive members of your engineering team faster and cheaper. We will focus on python specific resources and libraries that will help you create a simple but effective on boarding program\, and talk about case studies of companies that have had success using these techniques.

https://us.pycon.org/2014/schedule/presentation/223/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This is a talk about how to make junior and new engineers into independent and productive members of your engineering team faster and cheaper. We will focus on python specific resources and libraries that will help you create a simple but effective on boarding program\, and talk about case studies of companies that have had success using these techniques.<br><a href='https://us.pycon.org/2014/schedule/presentation/223/'>https://us.pycon.org/2014/schedule/presentation/223/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/223/
SUMMARY:Technical on-boarding, training, and mentoring. 
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T131000
DTEND;TZID="Eastern Standard Time":20140413T134000
DTSTAMP:20140331T221923
UID:pycon-2014-2.159
CREATED:20140331T221923
DESCRIPTION:Indie game developer Luke Miller presents a brief overview on making point-and-click adventure games using the open source pyvida gaming engine and uses his commercially released gay-themed adventure game 'My Ex-Boyfriend the Space Tyrant!' as a tutorial on developing\, packaging\, releasing and selling a python game for Windows\, Mac and Linux.

https://us.pycon.org/2014/schedule/presentation/159/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Indie game developer Luke Miller presents a brief overview on making point-and-click adventure games using the open source pyvida gaming engine and uses his commercially released gay-themed adventure game 'My Ex-Boyfriend the Space Tyrant!' as a tutorial on developing\, packaging\, releasing and selling a python game for Windows\, Mac and Linux.<br><a href='https://us.pycon.org/2014/schedule/presentation/159/'>https://us.pycon.org/2014/schedule/presentation/159/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/159/
SUMMARY:My big gay adventure. Making, releasing and selling an indie game made in python.
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T131000
DTEND;TZID="Eastern Standard Time":20140413T134000
DTSTAMP:20140331T221923
UID:pycon-2014-2.151
CREATED:20140331T221923
DESCRIPTION:Guaranteed behavior makes software modules useful. Software guarantees are commonly incomplete with good reason: promises that are narrow and few are most easily kept across wide ranges of platforms and long times. We define the space of a module’s allowed behavior to be its “behavioral envelope” and show that thinking and speaking in terms of envelopes eases maintenance and makes APIs delightful.

https://us.pycon.org/2014/schedule/presentation/151/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Guaranteed behavior makes software modules useful. Software guarantees are commonly incomplete with good reason: promises that are narrow and few are most easily kept across wide ranges of platforms and long times. We define the space of a module’s allowed behavior to be its “behavioral envelope” and show that thinking and speaking in terms of envelopes eases maintenance and makes APIs delightful.<br><a href='https://us.pycon.org/2014/schedule/presentation/151/'>https://us.pycon.org/2014/schedule/presentation/151/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/151/
SUMMARY:Deliver Your Software In An Envelope
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T131000
DTEND;TZID="Eastern Standard Time":20140413T134000
DTSTAMP:20140331T221923
UID:pycon-2014-2.182
CREATED:20140331T221923
DESCRIPTION:After half a lifetime 'undercover as a man' I transitioned from male to female while staying involved in the Python community. This talk discusses that transition and explores how I found life in Python as a woman different from my former life as a man.

https://us.pycon.org/2014/schedule/presentation/182/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>After half a lifetime 'undercover as a man' I transitioned from male to female while staying involved in the Python community. This talk discusses that transition and explores how I found life in Python as a woman different from my former life as a man.<br><a href='https://us.pycon.org/2014/schedule/presentation/182/'>https://us.pycon.org/2014/schedule/presentation/182/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/182/
SUMMARY:Farewell and Welcome Home: Python in Two Genders
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T135000
DTEND;TZID="Eastern Standard Time":20140413T142000
DTSTAMP:20140331T221923
UID:pycon-2014-2.158
CREATED:20140331T221923
DESCRIPTION:Games\, application with rich graphic for mobile platforms? Yes! You can do it for Android\, iOS and other platforms with using Python. In this talk I speak about tools you may use for developing applications with using OpenGL ES for different platforms\, the ways and concepts which are used in those tools\, some tips and tricks you may use to make a cross-platform game with Python for fun and profit.

https://us.pycon.org/2014/schedule/presentation/158/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Games\, application with rich graphic for mobile platforms? Yes! You can do it for Android\, iOS and other platforms with using Python. In this talk I speak about tools you may use for developing applications with using OpenGL ES for different platforms\, the ways and concepts which are used in those tools\, some tips and tricks you may use to make a cross-platform game with Python for fun and profit.<br><a href='https://us.pycon.org/2014/schedule/presentation/158/'>https://us.pycon.org/2014/schedule/presentation/158/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/158/
SUMMARY:2D/3D graphics with Python on mobile platforms
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T135000
DTEND;TZID="Eastern Standard Time":20140413T142000
DTSTAMP:20140331T221923
UID:pycon-2014-2.167
CREATED:20140331T221923
DESCRIPTION:Code executes.  Docs just sit there looking pretty.  Now it's time to blur that boundary!  Tools like the IPython Notebook\, Sphinx\, dexy\, and old-fashioned doctests blend code with docs\, making package docs\, educational materials\, and system-level docs more engaging\, relevant\, and trustworthy.

https://us.pycon.org/2014/schedule/presentation/167/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Code executes.  Docs just sit there looking pretty.  Now it's time to blur that boundary!  Tools like the IPython Notebook\, Sphinx\, dexy\, and old-fashioned doctests blend code with docs\, making package docs\, educational materials\, and system-level docs more engaging\, relevant\, and trustworthy.<br><a href='https://us.pycon.org/2014/schedule/presentation/167/'>https://us.pycon.org/2014/schedule/presentation/167/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/167/
SUMMARY:See Docs Run.  Run, Docs, Run!
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T135000
DTEND;TZID="Eastern Standard Time":20140413T142000
DTSTAMP:20140331T221923
UID:pycon-2014-2.222
CREATED:20140331T221923
DESCRIPTION:This talk will outline and demonstrate usage of PostgreSQL for data storage and processing scenarios where new common wisdom would usually turn to 'NoSQL' databases for scalability reasons. It demonstrates both NoSQL style usage and techniques using more traditional relational storage models with required adjustments for infinite scalability.

https://us.pycon.org/2014/schedule/presentation/222/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>This talk will outline and demonstrate usage of PostgreSQL for data storage and processing scenarios where new common wisdom would usually turn to 'NoSQL' databases for scalability reasons. It demonstrates both NoSQL style usage and techniques using more traditional relational storage models with required adjustments for infinite scalability.<br><a href='https://us.pycon.org/2014/schedule/presentation/222/'>https://us.pycon.org/2014/schedule/presentation/222/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/222/
SUMMARY:PostgreSQL is Web Scale (Really :) )
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T135000
DTEND;TZID="Eastern Standard Time":20140413T142000
DTSTAMP:20140331T221923
UID:pycon-2014-2.227
CREATED:20140331T221923
DESCRIPTION:Since 2010\, the GNOME Foundation’s Outreach Program for Women has provided 130 women with an opportunity to participate in remote internships with 23 Free Software organizations. This talk will cover the history of the program\, what makes it successful\, how the same strategies can be used for engaging all new contributors\, and what other initiatives help increase diversity in Free Software.

https://us.pycon.org/2014/schedule/presentation/227/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Since 2010\, the GNOME Foundation’s Outreach Program for Women has provided 130 women with an opportunity to participate in remote internships with 23 Free Software organizations. This talk will cover the history of the program\, what makes it successful\, how the same strategies can be used for engaging all new contributors\, and what other initiatives help increase diversity in Free Software.<br><a href='https://us.pycon.org/2014/schedule/presentation/227/'>https://us.pycon.org/2014/schedule/presentation/227/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/227/
SUMMARY:Outreach Program for Women: Lessons in Collaboration
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T135000
DTEND;TZID="Eastern Standard Time":20140413T142000
DTSTAMP:20140331T221923
UID:pycon-2014-2.196
CREATED:20140331T221923
DESCRIPTION:Curious about being involved in open source\, but haven't had the time to make the plunge? Involved with open source but a bit hazy on the way it all works? Open source legend Andrew Tridgell runs an annual week-long post-graduate primer course teaching 'Free and Open Source Software Development '. This talk will convey as much of this course as possible in the time available.

https://us.pycon.org/2014/schedule/presentation/196/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Curious about being involved in open source\, but haven't had the time to make the plunge? Involved with open source but a bit hazy on the way it all works? Open source legend Andrew Tridgell runs an annual week-long post-graduate primer course teaching 'Free and Open Source Software Development '. This talk will convey as much of this course as possible in the time available.<br><a href='https://us.pycon.org/2014/schedule/presentation/196/'>https://us.pycon.org/2014/schedule/presentation/196/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/196/
SUMMARY:Hitchhikers Guide to Participating in Open Source
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T143000
DTEND;TZID="Eastern Standard Time":20140413T150000
DTSTAMP:20140331T221923
UID:pycon-2014-2.201
CREATED:20140331T221923
DESCRIPTION:It was once quite painful to build your Python app as a single .exe file. Support forums filled with lamentations as users struggled with primitive tools. But today\, two separate tools exist for compiling your Python to real machine language! Come learn about how one of the biggest problems in commercial and enterprise software has now been solved and how you can benefit from this achievement.

https://us.pycon.org/2014/schedule/presentation/201/
LOCATION:Room 517AB
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>It was once quite painful to build your Python app as a single .exe file. Support forums filled with lamentations as users struggled with primitive tools. But today\, two separate tools exist for compiling your Python to real machine language! Come learn about how one of the biggest problems in commercial and enterprise software has now been solved and how you can benefit from this achievement.<br><a href='https://us.pycon.org/2014/schedule/presentation/201/'>https://us.pycon.org/2014/schedule/presentation/201/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/201/
SUMMARY:The Day of the EXE Is Upon Us
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T143000
DTEND;TZID="Eastern Standard Time":20140413T150000
DTSTAMP:20140331T221923
UID:pycon-2014-2.226
CREATED:20140331T221923
DESCRIPTION:Software engineering researchers and hackers don't talk to each other as much as they ought to. This talk aims to bridge that gap\, teach practitioners about what research is out there\, and spark a 'citizen science' movement in software engineering.  I'll explain how to study your own projects and get academics to pay attention.  Together\, we can learn how to develop better software.

https://us.pycon.org/2014/schedule/presentation/226/
LOCATION:Room 520
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Software engineering researchers and hackers don't talk to each other as much as they ought to. This talk aims to bridge that gap\, teach practitioners about what research is out there\, and spark a 'citizen science' movement in software engineering.  I'll explain how to study your own projects and get academics to pay attention.  Together\, we can learn how to develop better software.<br><a href='https://us.pycon.org/2014/schedule/presentation/226/'>https://us.pycon.org/2014/schedule/presentation/226/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/226/
SUMMARY:Software Engineering Research for Hackers: Bridging the Two Solitudes
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T143000
DTEND;TZID="Eastern Standard Time":20140413T150000
DTSTAMP:20140331T221923
UID:pycon-2014-2.177
CREATED:20140331T221923
DESCRIPTION:As U. of California campuses must reach Zero-Waste by 2020\, a Smart Dumpster was designed to increase efficiency\, study waste patterns\, and improve refuse reduction. Using Python\, a prototype has been installed into operations with tentative success since July 2013.  Demonstrating real-time data reporting\, the talk will focus on the success\, roadblocks and campus plans for the Smart Dumpster.

https://us.pycon.org/2014/schedule/presentation/177/
LOCATION:Room 710A
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>As U. of California campuses must reach Zero-Waste by 2020\, a Smart Dumpster was designed to increase efficiency\, study waste patterns\, and improve refuse reduction. Using Python\, a prototype has been installed into operations with tentative success since July 2013.  Demonstrating real-time data reporting\, the talk will focus on the success\, roadblocks and campus plans for the Smart Dumpster.<br><a href='https://us.pycon.org/2014/schedule/presentation/177/'>https://us.pycon.org/2014/schedule/presentation/177/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/177/
SUMMARY:Smart Dumpster: Employing Python to Report Real-Time Resource Fill to Operation Managers
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T143000
DTEND;TZID="Eastern Standard Time":20140413T150000
DTSTAMP:20140331T221923
UID:pycon-2014-2.206
CREATED:20140331T221923
DESCRIPTION:Is your web app ready for a global audience? Internationalizing your codebase with gettext (bit.ly/pyconi18n) might just be the simpler part of the puzzle. It’s hard to maintain translations in a fast paced deployment environment without constant manual intervention. This talk covers tools and strategies you can adopt to automate your localization process and ensure high translation coverage.

https://us.pycon.org/2014/schedule/presentation/206/
LOCATION:Room 517D
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Is your web app ready for a global audience? Internationalizing your codebase with gettext (bit.ly/pyconi18n) might just be the simpler part of the puzzle. It’s hard to maintain translations in a fast paced deployment environment without constant manual intervention. This talk covers tools and strategies you can adopt to automate your localization process and ensure high translation coverage.<br><a href='https://us.pycon.org/2014/schedule/presentation/206/'>https://us.pycon.org/2014/schedule/presentation/206/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/206/
SUMMARY:Localization Revisited
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID="Eastern Standard Time":20140413T143000
DTEND;TZID="Eastern Standard Time":20140413T150000
DTSTAMP:20140331T221923
UID:pycon-2014-2.232
CREATED:20140331T221923
DESCRIPTION:Got some code that you've written that would be useful to others\, but actually releasing it feels like too much new stuff to figure out? Releasing software does take some work\, but this talk will take you step-by-step through the process with specific recommendations and tools. We'll cover preparing your code for release\, packaging it\, releasing it\, and maintaining it over time.

https://us.pycon.org/2014/schedule/presentation/232/
LOCATION:Room 517C
X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><BODY>Got some code that you've written that would be useful to others\, but actually releasing it feels like too much new stuff to figure out? Releasing software does take some work\, but this talk will take you step-by-step through the process with specific recommendations and tools. We'll cover preparing your code for release\, packaging it\, releasing it\, and maintaining it over time.<br><a href='https://us.pycon.org/2014/schedule/presentation/232/'>https://us.pycon.org/2014/schedule/presentation/232/</a></BODY></HTML>
LAST-MODIFIED:20140331T221923
URL:https://us.pycon.org/2014/schedule/presentation/232/
SUMMARY:Set your code free: releasing and maintaining an open-source Python project
SEQUENCE:1
STATUS:CONFIRMED
X-MICROSOFT-CDO-BUSYSTATUS:FREE
TRANSP:TRANSPARENT
END:VEVENT
END:VCALENDAR
